#!/bin/bash

set -e

JIRA_DIR=${OPENSHIFT_DATA_DIR}jira
JIRA_VERSION=6.0.2

if [ ! -d ${OPENSHIFT_DATA_DIR}downloads ]; then
  mkdir ${OPENSHIFT_DATA_DIR}downloads
fi

#
# If there is no current download of JIRA, create one.
#
if [ ! -d "${OPENSHIFT_DATA_DIR}downloads/current" ]
then
  pushd ${OPENSHIFT_DATA_DIR}downloads
  JIRA_ARCHIVE=atlassian-jira-${JIRA_VERSION}-war.tar.gz
  if [ ! -e $JIRA_ARCHIVE ]; then
    curl -O http://downloads.atlassian.com/software/jira/downloads/$JIRA_ARCHIVE
  fi
  tar xzf $JIRA_ARCHIVE

  JIRA_TOMCAT_OVERRIDES=jira-jars-tomcat-distribution-${JIRA_VERSION}-tomcat-7x.zip
  if [ ! -e $JIRA_TOMCAT_OVERRIDES ]; then
    curl -O http://downloads.atlassian.com/software/jira/downloads/$JIRA_TOMCAT_OVERRIDES
  fi

  if [ ! -d ${OPENSHIFT_DATA_DIR}endorsed ]; then
    mkdir ${OPENSHIFT_DATA_DIR}endorsed
  fi 
  pushd ${OPENSHIFT_DATA_DIR}endorsed
  unzip -o ${OPENSHIFT_DATA_DIR}downloads/$JIRA_TOMCAT_OVERRIDES
  popd

  JIRA_INSTALL_DIR=${OPENSHIFT_DATA_DIR}downloads/$( echo $JIRA_ARCHIVE | sed 's/.tar.gz//' )
  ln -s ${JIRA_INSTALL_DIR} ${OPENSHIFT_DATA_DIR}downloads/current
  patch -d $JIRA_INSTALL_DIR < ${OPENSHIFT_REPO_DIR}/build-xml.patch
else
  JIRA_INSTALL_DIR=`readlink -f ${OPENSHIFT_DATA_DIR}downloads/current`
  echo "JIRA is already installed at $JIRA_INSTALL_DIR"
fi

if [ ! -e ${OPENSHIFT_DATA_DIR}/jira ]; then
  mkdir ${OPENSHIFT_DATA_DIR}/jira
fi
JIRA_HOME=${OPENSHIFT_DATA_DIR}/jira

pushd $JIRA_INSTALL_DIR
echo "jira.home = $JIRA_HOME" >> edit-webapp/WEB-INF/classes/jira-application.properties

cat <<EOF >${JIRA_HOME}/dbconfig.xml
<?xml version="1.0" encoding="UTF-8"?>

<jira-database-config>
  <name>defaultDS</name>
  <delegator-name>default</delegator-name>
  <database-type>postgres72</database-type>
  <schema-name>public</schema-name>
  <jdbc-datasource>
    <url>jdbc:postgresql://${OPENSHIFT_POSTGRESQL_DB_HOST}:${OPENSHIFT_POSTGRESQL_DB_PORT}/${OPENSHIFT_APP_NAME}</url>
    <driver-class>org.postgresql.Driver</driver-class>
    <username>${OPENSHIFT_POSTGRESQL_DB_USERNAME}</username>
    <password>${OPENSHIFT_POSTGRESQL_DB_PASSWORD}</password>
    <pool-min-size>20</pool-min-size>
    <pool-max-size>20</pool-max-size>
    <pool-max-wait>30000</pool-max-wait>
    <pool-max-idle>20</pool-max-idle>
    <pool-remove-abandoned>true</pool-remove-abandoned>
    <pool-remove-abandoned-timeout>300</pool-remove-abandoned-timeout>
  </jdbc-datasource>
</jira-database-config>
EOF

if [ ! -e ${JIRA_INSTALL_DIR}/edit-webapp/META-INF ] ; then
  mkdir -p ${JIRA_INSTALL_DIR}/edit-webapp/META-INF
fi
cat <<EOF >${JIRA_INSTALL_DIR}/edit-webapp/META-INF/context.xml
<Context path="/jira" docBase="" debug="0" useHttpOnly="true">
  <Resource name="UserTransaction" auth="Container" type="javax.transaction.UserTransaction"
    factory="org.objectweb.jotm.UserTransactionFactory" jotm.timeout="60"/>
  <Manager pathname=""/>
</Context>
EOF

if [ ! -e ${JIRA_INSTALL_DIR}/edit-webapp/WEB-INF/lib ] ; then
  mkdir ${JIRA_INSTALL_DIR}/edit-webapp/WEB-INF/lib
fi
if [ ! -e ${JIRA_INSTALL_DIR}/edit-webapp/WEB-INF/lib/postgresql-jdbc.jar ]; then
  cp /usr/share/java/postgresql-jdbc.jar ${JIRA_INSTALL_DIR}/edit-webapp/WEB-INF/lib
fi
rm dist-tomcat}/*.war || true
./build.sh
mv -f dist-tomcat/atlassian-jira-${JIRA_VERSION}.war ${OPENSHIFT_REPO_DIR}/webapps/
popd
